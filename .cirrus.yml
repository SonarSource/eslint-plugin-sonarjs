gcp_credentials: ENCRYPTED[!149d4005ecdba4cdd78bb5ba22756ebb98bf8e3367ee2e9ab08c5a1608c0d3e3b501904b67a1d67c0b63085e469d7dde!]

env:
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  SONAR_TOKEN: VAULT[development/kv/data/sonarcloud data.token]
  ARTIFACTORY_URL: https://repox.jfrog.io/
  ARTIFACTORY_DEPLOY_ACCESS_TOKEN : VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_PROMOTE_ACCESS_TOKEN : VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

container_definition: &CONTAINER_DEFINITION
  builder_image_project: release-engineering-ci-prod
  builder_image_name: family/docker-builder
  cluster_name: cirrus-ci
  zone: europe-west4-b
  namespace: default
  use_in_memory_disk: true

build_task:
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    matrix:
      - dockerfile: .cirrus/nodejs-14.Dockerfile
      - dockerfile: .cirrus/nodejs-16.Dockerfile
      - dockerfile: .cirrus/nodejs-18.Dockerfile
    <<: *CONTAINER_DEFINITION
    cpu: 3
    memory: 8G
  env:
    CIRRUS_CLONE_DEPTH: 10
    SONARSOURCE_QA: true
  script:
    - jfrog config add repox --url $ARTIFACTORY_URL --access-token $ARTIFACTORY_DEPLOY_ACCESS_TOKEN
    - jfrog rt npm-config --repo-resolve npm --repo-deploy sonarsource-npm-public-qa
    - git submodule update --init --depth 1 -r
    - jfrog rt npm-ci
    - npm run typecheck
    - npm run build
    - ./scripts/test-ci.sh
    - npm run check-format
    - npm run lint
    - npm run ruling
    - ./scripts/analyze_and_publish.sh

ws_scan_task:
  depends_on:
    - build
  gke_container:
    dockerfile: .cirrus/nodejs-18.Dockerfile
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  # run only on master and long-term branches
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*")
  env:
    WS_APIKEY: VAULT[development/kv/data/mend data.apikey]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  whitesource_script:
    - ./scripts/run_ws_scan.sh
  allow_failures: "true"
  always:
    ws_artifacts:
      path: "whitesource/**/*"
